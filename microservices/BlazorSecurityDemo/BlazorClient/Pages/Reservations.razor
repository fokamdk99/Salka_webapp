@page "/reservations"
@inject BlazorClient.ScheduleService sservice
@attribute [Authorize]
<h3>Reservations</h3>

@if (reservationList == null)
{
    <p><em>Loading...</em></p>
}
else 
{ 
<table class="table">
    <thead>
        <tr>
            <th>data</th>
            <th>start</th>
            <th>koniec</th>
            <th>liczba wokali</th>
            <th>typ rezerwacji</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var reservation in reservationList)
        {
        <tr>
            <td>@reservation.Date</td>
            <td>@reservation.Start</td>
            <td>@reservation.End</td>
            <td>@reservation.NumberOfVocals</td>
            <td>@reservation.ReservationType</td>
        </tr>
        }
    </tbody>
</table>
}

<br />
<h3>Make reservation </h3>

<EditForm Model="@reservationModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputDate id="date" @bind-Value="reservationModel.Date" /> data rezerwacji
    <InputDate id="start" @bind-Value="reservationModel.Start" /> godzina rozpoczecia
    <InputDate id="end" @bind-Value="reservationModel.End" /> godzina zakonczenia
    <select id="isRegular" @bind="reservationModel.IsRegular">
        <option value="1">yes</option>
        <option value="0">no</option>
    </select> czy regularnie
    <InputText id="comment" @bind-Value="reservationModel.Comment" /> komentarz
    <InputText id="numberOfVocals" @bind-Value="reservationModel.NumberOfVocals" /> liczba wokali
    <select id="reservationType" @bind="reservationModel.ReservationType">
        <option value=1>nagranie</option>
        <option value=2>Proba</option>
        <option value=3>nagrywana proba</option>
    </select>
    typ rezerwacji


    <button type="submit">Zarezerwuj</button>
</EditForm>

@code {
    private ReservationModel reservationModel = new ReservationModel();
    private List<ReservationModel> reservationList;

    protected override async Task OnInitializedAsync()
    {
        reservationList = await sservice.GetAllReservations();
    }

    private async Task HandleValidSubmit()
    {
        // Process the valid form
        await sservice.PostNewReservationAsync(reservationModel);
    }
}